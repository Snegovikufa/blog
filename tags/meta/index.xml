<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Meta on Rustam Safin (aka Snegovikufa) Site</title>
    <link>http://snegovikufa.github.io/tags/meta/</link>
    <description>Recent content in Meta on Rustam Safin (aka Snegovikufa) Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://snegovikufa.github.io/tags/meta/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MiT Office: Modelling</title>
      <link>http://snegovikufa.github.io/project/modelling/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/project/modelling/</guid>
      <description>

&lt;p&gt;MiT Office Modelling is a software used to create and modify existing hydrodynamic models for
&lt;a href=&#34;http://www2.emersonprocess.com/en-us/brands/roxar/reservoirmanagement/reservoirsimulation/pages/tempestmore.aspx&#34;&gt;Tempest MORE&lt;/a&gt;
and &lt;a href=&#34;https://www.software.slb.com/products/eclipse&#34;&gt;Eclipse&lt;/a&gt; simulators.&lt;/p&gt;

&lt;h3 id=&#34;my-responsibilities:1a78f08b347c58aecd18d23e659bda2c&#34;&gt;My responsibilities&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Application development and support&lt;/li&gt;
&lt;li&gt;Software requirements preparation&lt;/li&gt;
&lt;li&gt;Worked with customers requirements&lt;/li&gt;
&lt;li&gt;Continuous integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;technology-stack-and-libraries-used:1a78f08b347c58aecd18d23e659bda2c&#34;&gt;Technology stack and libraries used&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Python 2.7&lt;/li&gt;
&lt;li&gt;PyQt4&lt;/li&gt;
&lt;li&gt;C modules&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://code.enthought.com/projects/&#34;&gt;Enthought Tool Suite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nose tests&lt;/li&gt;
&lt;li&gt;Python-docx&lt;/li&gt;
&lt;li&gt;xlrd and xlwt for Excel reports&lt;/li&gt;
&lt;li&gt;Py2Exe&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;screenshots:1a78f08b347c58aecd18d23e659bda2c&#34;&gt;Screenshots&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/ufsim-charts.png&#34; alt=&#34;&#34; /&gt;
Main window with charts&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/ufsim-cube-editor.png&#34; alt=&#34;&#34; /&gt;
Cube editor window&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/ufsim-profiles.png&#34; alt=&#34;&#34; /&gt;
Well profile view window&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/ufsim-schedule-editor.png&#34; alt=&#34;&#34; /&gt;
Schedule data editor window&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MiT Office: WAG</title>
      <link>http://snegovikufa.github.io/project/rs_simulator/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/project/rs_simulator/</guid>
      <description>

&lt;p&gt;When I worked in &amp;ldquo;MiT-Ufa&amp;rdquo; LLC one of our client asked to develop a special working tool for calculating levels of production and injection in the reservoirs with the full WAG.
With customer&amp;rsquo;s engineers and our teammates we built a desktop C# application that simulates simplified reservoir and surface equipment behaviour. We used Windows Presentation Foundation to implement UI.&lt;/p&gt;

&lt;h3 id=&#34;my-responsibilities:257be3679dee36c9a6af94bddf9d11a4&#34;&gt;My responsibilities:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Software requirements preparation&lt;/li&gt;
&lt;li&gt;Worked with customers requirements&lt;/li&gt;
&lt;li&gt;Managed development team&lt;/li&gt;
&lt;li&gt;Development and support&lt;/li&gt;
&lt;li&gt;Continuous integration&lt;/li&gt;
&lt;li&gt;Reports preparation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;technology-stack-used:257be3679dee36c9a6af94bddf9d11a4&#34;&gt;Technology stack used&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;C#&lt;/li&gt;
&lt;li&gt;WPF&lt;/li&gt;
&lt;li&gt;LINQ&lt;/li&gt;
&lt;li&gt;XML&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;screenshots:257be3679dee36c9a6af94bddf9d11a4&#34;&gt;Screenshots&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/rs_sim_main.jpg&#34; alt=&#34;&#34; /&gt;
Main window&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/adaptation_sim.png&#34; alt=&#34;&#34; /&gt;
Adaptation window where user define known values from real reservoir&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Youtube comment reload page fix (Chrome)</title>
      <link>http://snegovikufa.github.io/post/youtube_fix/</link>
      <pubDate>Mon, 09 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/youtube_fix/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Open this link &lt;a href=&#34;chrome://net-internals/#hsts&#34;&gt;chrome://net-internals/#hsts&lt;/a&gt; and add &lt;code&gt;youtube.com&lt;/code&gt; domain into HSTS. This will force chrome to use HTTPS for youtube.com.&lt;/li&gt;
&lt;li&gt;Reload your youtube pages.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/youtube.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MiT Office: Wells</title>
      <link>http://snegovikufa.github.io/project/wells/</link>
      <pubDate>Sat, 10 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/project/wells/</guid>
      <description>

&lt;p&gt;This project involved developing a C# desktop application for wellhead equipment optimization.
The client needed a highly customizable tool for optimizing well head equipment with advanced analytics and reporting capabilities.&lt;/p&gt;

&lt;h3 id=&#34;my-responsibilities:d8274c7e831af928d67049560efbc53b&#34;&gt;My responsibilities&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Advising the client on selecting which technology stack to be used&lt;/li&gt;
&lt;li&gt;Coding the UI by receiving feedback and guidance from the clients engineers&lt;/li&gt;
&lt;li&gt;Application development and support&lt;/li&gt;
&lt;li&gt;Software requirements preparation&lt;/li&gt;
&lt;li&gt;Worked with customers requirements&lt;/li&gt;
&lt;li&gt;Continuous integration&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;technology-stack-used:d8274c7e831af928d67049560efbc53b&#34;&gt;Technology stack used&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;C#&lt;/li&gt;
&lt;li&gt;WPF&lt;/li&gt;
&lt;li&gt;XML&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;screenshots:d8274c7e831af928d67049560efbc53b&#34;&gt;Screenshots&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/wells_results.jpg&#34; alt=&#34;Optimization results window. The most useful method are highlighted&#34; /&gt;
Optimization results window. The most useful method are highlighted&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/wells_results_2.png&#34; alt=&#34;Optimization results charts.&#34; /&gt;
Optimization results charts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Connector</title>
      <link>http://snegovikufa.github.io/project/connector/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/project/connector/</guid>
      <description>

&lt;p&gt;Connector is a web tool for remote connections management.
It shows you information about client and client&amp;rsquo;s devices.&lt;/p&gt;

&lt;p&gt;The main feature is that Connector allows you to connect to remote clients&amp;rsquo; devices
via remote tools like radmin, Windows RDP without filling password fields.&lt;/p&gt;

&lt;p&gt;Connector uses Protocol handler and desktop client that receives incoming requests.
When user clicks &amp;ldquo;Connect&amp;rdquo;, desktop client watches for unique windows for Radmin/WinBox/&amp;hellip;/
and automatically fills required fields such as username and passwords.
If user&amp;rsquo;s computer is fast enough Connector user don&amp;rsquo;t see any &amp;ldquo;Fill password&amp;rdquo; windows.&lt;/p&gt;

&lt;h3 id=&#34;my-responsibilities:39e0fe225f1cbdaa82ecadbe5a578373&#34;&gt;My responsibilities:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Advised the client which technology stack to be used&lt;/li&gt;
&lt;li&gt;Developed the entire backend and frontend&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;technology-stack-used:39e0fe225f1cbdaa82ecadbe5a578373&#34;&gt;Technology stack used&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;C#&lt;/li&gt;
&lt;li&gt;ASP.NET MVC&lt;/li&gt;
&lt;li&gt;Telerik Kendo UI&lt;/li&gt;
&lt;li&gt;Bootstrap&lt;/li&gt;
&lt;li&gt;LINQ&lt;/li&gt;
&lt;li&gt;XML&lt;/li&gt;
&lt;li&gt;jsPlumb&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;screenshots:39e0fe225f1cbdaa82ecadbe5a578373&#34;&gt;Screenshots&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/connector_main.png&#34; alt=&#34;&#34; /&gt;
Main app view with client devices and Zabbix logs&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/connector_map.png&#34; alt=&#34;&#34; /&gt;
Devices map&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Where download Qt Visual Studio add-in?</title>
      <link>http://snegovikufa.github.io/post/qt_addin/</link>
      <pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/qt_addin/</guid>
      <description>&lt;p&gt;I have not found this link on official pages.
You can get add-in here: &lt;a href=&#34;http://download.qt-project.org/official_releases/vsaddin/&#34;&gt;http://download.qt-project.org/official_releases/vsaddin/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TeamWords</title>
      <link>http://snegovikufa.github.io/project/teamwords/</link>
      <pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/project/teamwords/</guid>
      <description>

&lt;p&gt;TeamWords is a free cross-platform desktop Slack client with native notifications.&lt;/p&gt;

&lt;p&gt;TeamWords was created when Slack had not released official native client.
Web-version has only short time notifications (&amp;lt; 10 seconds).
If you miss notification, you will not notice that someone had written you a message.&lt;/p&gt;

&lt;h3 id=&#34;technology-stack-used:fa7e4038b21a85b6214d03004b8e3708&#34;&gt;Technology stack used&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;li&gt;Qt5 (Widgets + Webkit)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;screenshots:fa7e4038b21a85b6214d03004b8e3708&#34;&gt;Screenshots&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/teamwords_main.png&#34; alt=&#34;&#34; /&gt;
Main app view&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/teamwords_notification.jpg&#34; alt=&#34;&#34; /&gt;
Notification example&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Исправление ошибки при использовании P/Invoke</title>
      <link>http://snegovikufa.github.io/post/p_invoke_error/</link>
      <pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/p_invoke_error/</guid>
      <description>&lt;p&gt;Чтобы исправить вот эту ошибку:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;System.BadImageFormatException: Была сделана попытка загрузить программу, имеющую неверный формат.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Нужно в свойствах проекта Visual Studio проверить платформу сборки x86.Properties - Build - Platform Target - x86:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/pinvoke_settings.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to set Omnibus Gitlab unicorn workers count</title>
      <link>http://snegovikufa.github.io/post/gitlab_unicorn/</link>
      <pubDate>Thu, 19 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/gitlab_unicorn/</guid>
      <description>&lt;p&gt;Stop your gitlab instance&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gitlab-ctl stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit file &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Uncomment and set unicorn workers count&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
##################
# GitLab Unicorn #
##################
## Tweak unicorn settings.

# unicorn[&#39;worker_timeout&#39;] = 60
unicorn[&#39;worker_processes&#39;] = 1
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to set Omnibus Gitlab Sidekiq workers count</title>
      <link>http://snegovikufa.github.io/post/omnibus_gitlab/</link>
      <pubDate>Wed, 18 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/omnibus_gitlab/</guid>
      <description>&lt;p&gt;Stop your gitlab instance&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gitlab-ctl stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit file &lt;code&gt;/opt/gitlab/sv/sidekiq/run&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set your workers count:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
cd /var/opt/gitlab/gitlab-rails/working
exec 2&amp;gt;&amp;amp;1
exec chpst -e /opt/gitlab/etc/gitlab-rails/env -P \
  -U git -u git \
  /opt/gitlab/embedded/bin/bundle exec sidekiq \
    # ADD THE LINE BELOW AND SET NUMBER OF WORKERS
    -c 3 \  # &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; SET NUMBER OF WORKERS HERE
    -q post_receive \
    -q mailer \
    -q system_hook \
    -q project_web_hook \
    -q gitlab_shell \
    -q common \
    -q default \
    -e production \
    -r /opt/gitlab/embedded/service/gitlab-rails \
    -t 4
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Select right chart to represent data</title>
      <link>http://snegovikufa.github.io/post/select_chart/</link>
      <pubDate>Thu, 25 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/select_chart/</guid>
      <description>&lt;p&gt;Иногда возникает проблема выбора каким же графиком отобразить данные. Надеюсь вот эти картинки смогут помочь.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/chart_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/chart_2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WPF set application-wide Culture, NumberFormat, Decimal separator</title>
      <link>http://snegovikufa.github.io/post/wpf_locale/</link>
      <pubDate>Thu, 25 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/wpf_locale/</guid>
      <description>&lt;p&gt;WPF by default uses built-in culture settings that come with .Net Framework libraries.&lt;/p&gt;

&lt;p&gt;For example, for ru-RU culture &lt;em&gt;double&lt;/em&gt; must look like 123456,789, for en-US like 123456.789, so if you don&amp;rsquo;t want your users to be angry, you must set your application culture at startup. However, our users want to see &lt;em&gt;doubles&lt;/em&gt; like in en-US culture, e.g. 123456.789&lt;/p&gt;

&lt;p&gt;There are two ways to do this:&lt;/p&gt;

&lt;p&gt;1. Modify current culture settings. And that is awful
   a. Not all controls support such behaviour
   b. This code breaks all your hopes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;XmlLanguage xmlLanguage = XmlLanguage.GetLanguage(&amp;quot;ru-RU&amp;quot;);
FrameworkElement.LanguageProperty.OverrideMetadata(typeof (FrameworkElement),
                                                   new FrameworkPropertyMetadata(xmlLanguage));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;span style=&#34;color: #333333; font-size: 12px;&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color: #990000;&#34;&gt;XmlLanguage ignore all modifications to Thread.CurrentThread.CurrentCulture&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2. Register your own culture (&lt;strong&gt;works if your users can get administator rights&lt;/strong&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private const string CultureName = &amp;quot;ru-MIT&amp;quot;;
private const string cultureEnglishName = &amp;quot;ru-MIT&amp;quot;;
private const string cultureNativeName = &amp;quot;Русский (Мит)&amp;quot;;

private static void Main(string[] args)
{
    CreateAndRegisterOwnCulture();
}

private static void CreateAndRegisterOwnCulture()
{
    var ownCulture = new CultureAndRegionInfoBuilder(CultureName, CultureAndRegionModifiers.None);

    var parentCulture = new CultureInfo(&amp;quot;ru-RU&amp;quot;);
    var region = new RegionInfo(&amp;quot;RU&amp;quot;);
    ownCulture.LoadDataFromCultureInfo(parentCulture);
    ownCulture.LoadDataFromRegionInfo(region);

    ownCulture.CultureEnglishName = cultureEnglishName;
    ownCulture.CultureNativeName = cultureNativeName;

    var nfi = (NumberFormatInfo) parentCulture.NumberFormat.Clone();
    nfi.NumberDecimalSeparator = &amp;quot;.&amp;quot;;
    nfi.NumberGroupSeparator = &amp;quot; &amp;quot;;
    nfi.CurrencyDecimalSeparator = &amp;quot;.&amp;quot;;
    nfi.CurrencyGroupSeparator = &amp;quot; &amp;quot;;

    ownCulture.NumberFormat = nfi;
    ownCulture.Parent = parentCulture;


    if (SystemHasMitCulture())
    {
        Console.WriteLine(&amp;quot;&amp;gt;&amp;gt;&amp;gt; System already has own culture :)&amp;quot;);
        return;
    }

    // Admin rights are needed here
    // CultureAndRegionInfoBuilder.Unregister(CultureName);

    try
    {
        // Admin rights are needed here
        Console.WriteLine(&amp;quot;&amp;gt;&amp;gt;&amp;gt; Trying to set own culture&amp;quot;);
        ownCulture.Register();
        Console.WriteLine(&amp;quot;&amp;gt;&amp;gt;&amp;gt; Own culture set successfully&amp;quot;);
    }
    catch (UnauthorizedAccessException)
    {
        Console.WriteLine(&amp;quot;&amp;gt;&amp;gt;&amp;gt; Set own culture failed :(&amp;quot;);
    }
    catch (InvalidOperationException)
    {
        Console.WriteLine(&amp;quot;&amp;gt;&amp;gt;&amp;gt; Culture is already registered :)&amp;quot;);
    }
}

private static bool SystemHasMitCulture()
{
    return CultureInfo.GetCultures(CultureTypes.UserCustomCulture).Any(ci =&amp;gt; (ci.Name == CultureName));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The same code on Github Gist: &lt;a href=&#34;https://gist.github.com/Snegovikufa/f051959dd105b7e56405&#34;&gt;https://gist.github.com/Snegovikufa/f051959dd105b7e56405&lt;/a&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSH / SCP ignores sshconfig in command line</title>
      <link>http://snegovikufa.github.io/post/ssh_scp_ignores_config/</link>
      <pubDate>Tue, 11 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/ssh_scp_ignores_config/</guid>
      <description>&lt;p&gt;If you setup git and then try to use ssh from SYSTEM account, then you will get authentication errors. To solve that issues you need to add HOME system environment variable and reboot your machine.&lt;/p&gt;

&lt;p&gt;So your system PATH will look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/path.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Telerik RadComboBox bind to Enum</title>
      <link>http://snegovikufa.github.io/post/telerik_enum/</link>
      <pubDate>Wed, 15 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/telerik_enum/</guid>
      <description>

&lt;p&gt;The result you want to see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://snegovikufa.github.io/images/telerik_enum.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;testcombobox-xaml:0999d164b97bc3fca29f43bf9bd98828&#34;&gt;TestCombobox.xaml&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Window x:Class=&amp;quot;TelerikWpfApp1.TestComboBox&amp;quot;
        xmlns=&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;quot;
        xmlns:x=&amp;quot;http://schemas.microsoft.com/winfx/2006/xaml&amp;quot;
        xmlns:telerik=&amp;quot;http://schemas.telerik.com/2008/xaml/presentation&amp;quot;
        xmlns:telerikWpfApp1=&amp;quot;clr-namespace:TelerikWpfApp1&amp;quot;
        Title=&amp;quot;TestComboBox&amp;quot; Height=&amp;quot;300&amp;quot; Width=&amp;quot;300&amp;quot;&amp;gt;
    &amp;lt;Window.Resources&amp;gt;
        &amp;lt;telerik:EnumDataSource EnumType=&amp;quot;telerikWpfApp1:PlayerType&amp;quot;
                                x:Key=&amp;quot;enumDataSource&amp;quot; /&amp;gt;
    &amp;lt;/Window.Resources&amp;gt;
    &amp;lt;Grid&amp;gt;
        &amp;lt;telerik:RadComboBox SelectedValue=&amp;quot;{Binding Path=PlayerType}&amp;quot;
                             ItemsSource=&amp;quot;{Binding Source={StaticResource enumDataSource}}&amp;quot;
                             DisplayMemberPath=&amp;quot;DisplayName&amp;quot;
                             SelectedValuePath=&amp;quot;Value&amp;quot; /&amp;gt;
    &amp;lt;/Grid&amp;gt;
&amp;lt;/Window&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;testcombobox-xaml-cs:0999d164b97bc3fca29f43bf9bd98828&#34;&gt;TestCombobox.xaml.cs&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Windows;
namespace TelerikWpfApp1
{
    public partial class TestComboBox
    {
        public TestComboBox()
        {
            InitializeComponent();
            this.DataContext = new Player()
            {
                PlayerType = PlayerType.Defender,
            };
        }
    }
    public enum PlayerType
    {
        [Description(&amp;quot;The forward&amp;quot;)]
        Forward,
        [Description(&amp;quot;The defender&amp;quot;)]
        Defender,
        [Description(&amp;quot;The goal keeper&amp;quot;)]
        GoalKeeper,
    }
    public class Player
    {
        public PlayerType PlayerType { get; set; }
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Windows, Git bash &amp; Putty</title>
      <link>http://snegovikufa.github.io/post/windows_ssh/</link>
      <pubDate>Wed, 03 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://snegovikufa.github.io/post/windows_ssh/</guid>
      <description>&lt;p&gt;Надоело постоянно вводить пароли в git bash для пулов/пушей&lt;/p&gt;

&lt;p&gt;Рецепт для Windows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Установить Git, Putty + Plink + PuttyGen + Pagent (с официального сайта можно скачать установщик)&lt;/li&gt;
&lt;li&gt;Сгенерировать ключи в PuttyGen в формате .ppk, закинуть их в %HOME%.ssh&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Создать ярлык для запуска Pagent&lt;/p&gt;

&lt;p&gt;&amp;ldquo;C:\Program Files (x86)\PuTTY\pageant.exe&amp;rdquo; &amp;ldquo;C:\Users\snegovik.ssh\work_rsa.ppk&amp;rdquo; &amp;ldquo;C:\Users\snegovik.ssh\github_rsa.ppk&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Запустить Pagent с помощью ярлыка, ввести пароли для ключей&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Запустить Putty, подключиться один раз ко всем серверам, можно ничего не вводить, просто принять fingerprint&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Установить переменную окружения (советую Rapid Environment Editor)&lt;/p&gt;

&lt;p&gt;GIT_SSH=C:\Program Files (x86)\PuTTY\plink.exe&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Запустить Git bash и радоваться&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>